{
	"nodes":[
		{"type":"text","text":"find the index to insert key value\n- node\n- key\n\n-> index\n`func findLessEqualNode(node BNode, key []byte) uint16 {`","id":"271f1c3d69891ee3","x":440,"y":-100,"width":580,"height":200},
		{"type":"text","text":"insert the key value into the index position of the node\n- node\n- key\n- value\n- index\n\n-> new node\n`func insertIntoNode(node BNode, key []byte, val []byte, index uint16) BNode {`","id":"8496c0ae0c6614e4","x":340,"y":160,"width":780,"height":260},
		{"type":"text","text":"insert key value into node\n- node\n- key\n- value\n\n-> new node\n`func treeInsert(node BNode, key []byte, val []byte) BNode {`","id":"a0dc0eb38de64fb4","x":-339,"y":-400,"width":595,"height":240},
		{"type":"text","text":"node type","id":"d4263d29495fe229","x":1220,"y":260,"width":250,"height":60},
		{"type":"text","text":"internal node","id":"c4b8aac408a4af05","x":1220,"y":390,"width":250,"height":60},
		{"type":"text","text":"leaf node","id":"5ffaaf494374465f","x":1220,"y":130,"width":250,"height":60},
		{"type":"text","text":"key already exists","id":"9a91a4af8c6f0961","x":1560,"y":130,"width":250,"height":60},
		{"type":"text","text":"no","id":"c6ff78a011226847","x":1560,"y":260,"width":250,"height":60},
		{"type":"text","text":"yes","id":"78dbaf0f995f002d","x":1560,"y":0,"width":250,"height":60},
		{"type":"text","text":"`func leafNodeUpdate(new BNode, old BNode, idx uint16, key []byte, val []byte) {`","id":"ee93f2bde8d91729","x":1900,"y":0,"width":740,"height":60},
		{"type":"text","text":"`func leafNodeInsert(new BNode, old BNode, idx uint16, key []byte, val []byte) {`","id":"8088261e304d9a5b","x":1900,"y":260,"width":740,"height":60},
		{"type":"text","text":"copying header to the new node\n`new.setHeader(BNODE_LEAF, old.numberOfKeys()+1)`","id":"69908c9263b3658d","x":2770,"y":450,"width":520,"height":60},
		{"type":"text","text":"copy KVs before index to the new node\n`func nodeAppendRange(new BNode, old BNode, dstNew uint16, srcOld uint16, n uint16) {`","id":"a611fa04df353e66","x":2640,"y":580,"width":780,"height":60},
		{"type":"text","text":"add key values to the new node\n`func nodeAppendKV(new BNode, idx uint16, ptr uint64, key []byte, val []byte) {`","id":"8ae3cf04673032e8","x":2665,"y":710,"width":731,"height":60},
		{"type":"text","text":"copy KVs after index to the new node\n`func nodeAppendRange(new BNode, old BNode, dstNew uint16, srcOld uint16, n uint16) {`","id":"f6f1f3a68eaa3795","x":2641,"y":850,"width":780,"height":60},
		{"type":"text","text":"`func internalNodeInsert(new BNode, node BNode, idx uint16, key []byte, val []byte) {`","id":"01243a84990a2f84","x":340,"y":640,"width":780,"height":56},
		{"type":"text","text":"insert key value into tree\n- tree\n- key\n- value","id":"763c32ef7b654585","x":-640,"y":-680,"width":250,"height":180}
	],
	"edges":[
		{"id":"24ff12bf4ed0c83c","fromNode":"271f1c3d69891ee3","fromSide":"bottom","toNode":"8496c0ae0c6614e4","toSide":"top"},
		{"id":"3cc333fd05837ec9","fromNode":"a0dc0eb38de64fb4","fromSide":"right","toNode":"271f1c3d69891ee3","toSide":"top"},
		{"id":"d8bf2b145212905a","fromNode":"8496c0ae0c6614e4","fromSide":"right","toNode":"d4263d29495fe229","toSide":"left"},
		{"id":"3b7bac9f0389e41a","fromNode":"d4263d29495fe229","fromSide":"top","toNode":"5ffaaf494374465f","toSide":"bottom"},
		{"id":"4c70f7a1fda50dbe","fromNode":"d4263d29495fe229","fromSide":"bottom","toNode":"c4b8aac408a4af05","toSide":"top"},
		{"id":"682d55414d166df8","fromNode":"5ffaaf494374465f","fromSide":"right","toNode":"9a91a4af8c6f0961","toSide":"left"},
		{"id":"b75927a478fc956a","fromNode":"9a91a4af8c6f0961","fromSide":"top","toNode":"78dbaf0f995f002d","toSide":"bottom"},
		{"id":"2db2dd562917e041","fromNode":"9a91a4af8c6f0961","fromSide":"bottom","toNode":"c6ff78a011226847","toSide":"top"},
		{"id":"5ced5f356ed0f733","fromNode":"78dbaf0f995f002d","fromSide":"right","toNode":"ee93f2bde8d91729","toSide":"left"},
		{"id":"9faf42789da5da1c","fromNode":"c6ff78a011226847","fromSide":"right","toNode":"8088261e304d9a5b","toSide":"left"},
		{"id":"a9340864795f122e","fromNode":"69908c9263b3658d","fromSide":"bottom","toNode":"a611fa04df353e66","toSide":"top"},
		{"id":"998333295c7a2bee","fromNode":"a611fa04df353e66","fromSide":"bottom","toNode":"8ae3cf04673032e8","toSide":"top"},
		{"id":"b659558a6c98ef05","fromNode":"8ae3cf04673032e8","fromSide":"bottom","toNode":"f6f1f3a68eaa3795","toSide":"top"},
		{"id":"c82e7c5aec9210de","fromNode":"8088261e304d9a5b","fromSide":"right","toNode":"69908c9263b3658d","toSide":"top"},
		{"id":"dc7898f2b7d94f6a","fromNode":"ee93f2bde8d91729","fromSide":"right","toNode":"69908c9263b3658d","toSide":"top"},
		{"id":"039a80cb2a632dcb","fromNode":"763c32ef7b654585","fromSide":"right","toNode":"a0dc0eb38de64fb4","toSide":"top","label":"node = root"},
		{"id":"ea2d97fa7ed3fc32","fromNode":"c4b8aac408a4af05","fromSide":"right","toNode":"01243a84990a2f84","toSide":"right"},
		{"id":"d9fd4b4228575ca7","fromNode":"01243a84990a2f84","fromSide":"left","toNode":"a0dc0eb38de64fb4","toSide":"bottom","label":"node = node.child"}
	]
}